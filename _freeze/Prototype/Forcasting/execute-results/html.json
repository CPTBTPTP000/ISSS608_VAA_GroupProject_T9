{
  "hash": "6773e698f959f469a428d3f9485c1c50",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"WASH-Based Health Trend Analysis\"\nauthor: \"Lai Meihao\"\ndate: \"March 31, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1. Overview\n\nIn this analysis, I will explore the forecasting of health outcomes related to WASH (Water, Sanitation, and Hygiene) indicators using **Panel Linear Models (PLM)** and **Time-series analysis (ARIMA**). The goal is to project future trends in diseases such as Diarrhea, Typhoid, and Hepatitis across different WHO regions, based on the impact of WASH-related factors like water access, sanitation, and hygiene practices.\n\n# 2. Initial Data Preparation\n\n## 2.1 Install and launch R packages\n\nThe project uses `p_load()` of pacman package to check if the R package are installed in the computer.\n\nThe following code chunk is used to install and launch the R packages.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggplot2, plm,ExPanDaR,lubridate, ggthemes, plotly,dplyr,purrr,forecast)\n```\n:::\n\n\n\n## 2.2 Import Data\n\nThe below code chunk use `read_csv()` to read the csv file into R as a data frame\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data <- read_csv(\"data/merged_data.csv\")\n```\n:::\n\n\n\n## **2.3 Overview of the data**\n\n### **Dataset Structure**\n\nThe below code chunk check the structure of the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(merged_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,232\nColumns: 8\n$ Region        <chr> \"Region of the Americas\", \"Region of the Americas\", \"Reg…\n$ Year          <dbl> 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 20…\n$ TyphoidRate   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ DiarrheaRate  <dbl> 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.…\n$ HepatitisRate <dbl> 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.…\n$ UnsafeRisk    <dbl> 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.…\n$ Series.Name   <chr> \"Level of water stress: freshwater withdrawal as a propo…\n$ AvgValue      <dbl> 1.308801e+01, 8.252346e+00, 8.867545e+01, 7.710693e+01, …\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(merged_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  Region      Year TyphoidRate DiarrheaRate HepatitisRate UnsafeRisk Series.Name\n  <chr>      <dbl>       <dbl>        <dbl>         <dbl>      <dbl> <chr>      \n1 Region of…  2000           0         5.88          0.38          1 Level of w…\n2 Region of…  2000           0         5.88          0.38          1 People pra…\n3 Region of…  2000           0         5.88          0.38          1 People usi…\n4 Region of…  2000           0         5.88          0.38          1 People usi…\n5 Region of…  2000           0         5.88          0.38          1 People usi…\n6 Region of…  2000           0         5.88          0.38          1 People usi…\n# ℹ 1 more variable: AvgValue <dbl>\n```\n\n\n:::\n:::\n\n\n\n# 3. Data Processing\n\n## 3.1 Missing Data\n\nThe below code chunk of `is.na()` to check the missing values in the `merged_data` frame, and returns a logical matrix( or vector, depending on the data structure. `sum()` function calculate the sum of the elements of the logical matrix or vector.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(merged_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\nThe result of zero indicate that there no missing in the merge dataset.\n\n## 3.2 Duplicate Value\n\nThe `duplicated()` function checks for duplicate rows in the `merged_data` frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(duplicated(merged_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\nThe result indicate that there is no duplicate in the `merged_data`.\n\n# 4. PLM: Linear Model for panel data\n\n## 4.1 Overview of plm\n\nA **Panel Linear Model (PLM)** is a statistical model used to analyze data that includes observations over time (time-series) and across different units (cross-sectional). This type of data, often called panel data or longitudinal data, involves multiple subjects (such as countries, individuals, or companies) observed over several time periods.\n\nFor this project, we are using data from the World Development Indicators (WDI) as WASH (Water, Sanitation, and Hygiene) indicators and data from the Institute for Health Metrics as health indicators. We will apply the PLM to estimate the coefficients of the WASH indicators for each health indicator. Subsequently, we will use time-series analysis to forecast trends for the health indicators, particularly disease rates, based on the coefficients obtained from the WASH indicators.\n\nTo apply PLM in our project, we will be using [`plm`](https://cran.r-project.org/web/packages/plm/plm.pdf) package in R.\n\n## 4.2 Creating Panel Data\n\nBefore proceed to the PLM analysis, we will first create panel data. We will be start by understanding `merged_data`.\\\nThe below code chunk use `names()` function to extract the names of the columns in the `merged_data`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(merged_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Region\"        \"Year\"          \"TyphoidRate\"   \"DiarrheaRate\" \n[5] \"HepatitisRate\" \"UnsafeRisk\"    \"Series.Name\"   \"AvgValue\"     \n```\n\n\n:::\n:::\n\n\n\nThe output shows the columns in the `merged_data`.\n\nThe below code chunk use the `summary()` function to provide a quick overview of each column in a dataframe.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(merged_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Region               Year       TyphoidRate       DiarrheaRate  \n Length:1232        Min.   :2000   Min.   :0.00000   Min.   : 2.72  \n Class :character   1st Qu.:2005   1st Qu.:0.00000   1st Qu.: 5.27  \n Mode  :character   Median :2010   Median :0.01500   Median : 8.80  \n                    Mean   :2010   Mean   :0.03614   Mean   :12.05  \n                    3rd Qu.:2016   3rd Qu.:0.04000   3rd Qu.:21.36  \n                    Max.   :2021   Max.   :0.22000   Max.   :22.74  \n HepatitisRate      UnsafeRisk     Series.Name           AvgValue        \n Min.   :0.2800   Min.   : 0.080   Length:1232        Min.   :        0  \n 1st Qu.:0.3700   1st Qu.: 0.290   Class :character   1st Qu.:       33  \n Median :0.4800   Median : 1.245   Mode  :character   Median :       71  \n Mean   :0.5292   Mean   : 3.470                      Mean   :  5899097  \n 3rd Qu.:0.6800   3rd Qu.: 6.607                      3rd Qu.:      104  \n Max.   :0.8300   Max.   :10.680                      Max.   :187658229  \n```\n\n\n:::\n:::\n\n\n\nThis summary provides key insights into the distribution and spread of values in each of the columns. The `AvgValue` column, for instance, has a wide range, with very large maximum values compared to the median and first quartile. Similarly, health indicators like `TyphoidRate`, `DiarrheaRate`, and `HepatitisRate` show varying levels of distribution, with some regions having very low rates and others experiencing high rates.\n\nThe below code chunk use `str()` function to display the structure of the merged_data. It provides a compact overview of the data type of each column, as well as the first few entries in each column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(merged_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [1,232 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Region       : chr [1:1232] \"Region of the Americas\" \"Region of the Americas\" \"Region of the Americas\" \"Region of the Americas\" ...\n $ Year         : num [1:1232] 2000 2000 2000 2000 2000 ...\n $ TyphoidRate  : num [1:1232] 0 0 0 0 0 0 0 0 0 0 ...\n $ DiarrheaRate : num [1:1232] 5.88 5.88 5.88 5.88 5.88 5.88 5.88 5.88 5.88 5.81 ...\n $ HepatitisRate: num [1:1232] 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.38 ...\n $ UnsafeRisk   : num [1:1232] 1 1 1 1 1 1 1 1 1 0.94 ...\n $ Series.Name  : chr [1:1232] \"Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\" \"People practicing open defecation (% of population)\" \"People using at least basic drinking water services (% of population)\" \"People using at least basic sanitation services (% of population)\" ...\n $ AvgValue     : num [1:1232] 13.09 8.25 88.68 77.11 61.49 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Region = col_character(),\n  ..   Year = col_double(),\n  ..   TyphoidRate = col_double(),\n  ..   DiarrheaRate = col_double(),\n  ..   HepatitisRate = col_double(),\n  ..   UnsafeRisk = col_double(),\n  ..   Series.Name = col_character(),\n  ..   AvgValue = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n\n\nThe dataset is a **spec_tbl_df** (which is a specific type of tibble in R) with **1232 rows and 8 columns**. The dataset includes 8 variables (columns), and it uses the `spec_tbl_df` class from the `tibble` package.\n\nThe below code chunk summaries the `merged_data` set by grouping it by `Region` and `Year`.\n\nThe result of this code is a new data frame, `merged_data_clean`, where:\n\n-   Each row corresponds to a unique combination of `Region` and `Year`.\n\n-   For each `Region` and `Year`, the mean values for `TyphoidRate`, `DiarrheaRate`, `HepatitisRate`, and `UnsafeRisk` are calculated, ignoring missing values.\n\nThe code chunk below use the `pivot_wider()` function from the `tidyverse` package to transform the `merged_data` dataset from long format to wide format. As the WASH indicator are store in the column `Series.Name`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwide_data <- merged_data %>%\n  pivot_wider(\n    id_cols = c(Region, Year, TyphoidRate, DiarrheaRate, HepatitisRate, UnsafeRisk),\n    names_from = Series.Name,\n    values_from = AvgValue\n  )\n```\n:::\n\n\n\nThe code chunk below creates a panel data frame using the `pdata.frame()` function from the `plm` package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npdata <- pdata.frame(wide_data, index = c(\"Region\", \"Year\"))\n```\n:::\n\n\n\nThe result of this code is that the `wide_data` data frame is now transformed into a **panel data frame**, stored in the variable `pdata`. This allows we to perform panel data analysis using the `plm` package.\n\n-   The `pdata` object will now be suitable for running panel regressions, such as fixed effects or random effects models, using functions like `plm()` from the `plm` package.\n\nThe below code chunk use `colnames()` function to return the column names of the `pdata` which is now a panel data after being converted by `pdata.frame()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(pdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Region\"                                                                                          \n [2] \"Year\"                                                                                            \n [3] \"TyphoidRate\"                                                                                     \n [4] \"DiarrheaRate\"                                                                                    \n [5] \"HepatitisRate\"                                                                                   \n [6] \"UnsafeRisk\"                                                                                      \n [7] \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\"  \n [8] \"People.practicing.open.defecation....of.population.\"                                             \n [9] \"People.using.at.least.basic.drinking.water.services....of.population.\"                           \n[10] \"People.using.at.least.basic.sanitation.services....of.population.\"                               \n[11] \"People.using.safely.managed.drinking.water.services....of.population.\"                           \n[12] \"People.using.safely.managed.sanitation.services....of.population.\"                               \n[13] \"Population.density..people.per.sq..km.of.land.area.\"                                             \n[14] \"Population..total\"                                                                               \n[15] \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\"\n[16] \"People.with.basic.handwashing.facilities.including.soap.and.water....of.population.\"             \n```\n\n\n:::\n:::\n\n\n\n## 4.3 PLM for coefficient of the WASH Variables\n\nThe below code chunk fits a Fixed Effects Model also known as the 'within' model) using the `plm` function from the `plm` package in R analyse the relationship between `DiarrheaRate` and WASH indicators.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- plm(DiarrheaRate ~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = DiarrheaRate ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n     Min.   1st Qu.    Median   3rd Qu.      Max. \n-1.021289 -0.248422 -0.060002  0.257269  0.961836 \n\nCoefficients:\n                                                                                                   Estimate\nPeople.practicing.open.defecation....of.population.                                              -0.6755407\nPeople.using.at.least.basic.drinking.water.services....of.population.                            -1.0144098\nPeople.using.at.least.basic.sanitation.services....of.population.                                -0.1706479\nPopulation.density..people.per.sq..km.of.land.area.                                               0.0014148\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.0029523\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.0110199\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.2855646\nPeople.using.safely.managed.sanitation.services....of.population.                                -0.1302516\n                                                                                                 Std. Error\nPeople.practicing.open.defecation....of.population.                                               0.1085486\nPeople.using.at.least.basic.drinking.water.services....of.population.                             0.1014805\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.0915876\nPopulation.density..people.per.sq..km.of.land.area.                                               0.0052560\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.0011407\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.0034595\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.1001031\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.1234424\n                                                                                                 t-value\nPeople.practicing.open.defecation....of.population.                                              -6.2234\nPeople.using.at.least.basic.drinking.water.services....of.population.                            -9.9961\nPeople.using.at.least.basic.sanitation.services....of.population.                                -1.8632\nPopulation.density..people.per.sq..km.of.land.area.                                               0.2692\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  2.5882\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    3.1854\nPeople.using.safely.managed.drinking.water.services....of.population.                             2.8527\nPeople.using.safely.managed.sanitation.services....of.population.                                -1.0552\n                                                                                                  Pr(>|t|)\nPeople.practicing.open.defecation....of.population.                                              7.677e-09\nPeople.using.at.least.basic.drinking.water.services....of.population.                            < 2.2e-16\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.064917\nPopulation.density..people.per.sq..km.of.land.area.                                               0.788259\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.010860\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.001849\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.005120\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.293507\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              ***\nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                .  \nPopulation.density..people.per.sq..km.of.land.area.                                                 \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. *  \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ** \nPeople.using.safely.managed.drinking.water.services....of.population.                            ** \nPeople.using.safely.managed.sanitation.services....of.population.                                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    146.4\nResidual Sum of Squares: 21.365\nR-Squared:      0.85406\nAdj. R-Squared: 0.83798\nF-statistic: 86.3196 on 8 and 118 DF, p-value: < 2.22e-16\n```\n\n\n:::\n:::\n\n\n\nThe below code chunk fits a Fixed Effects Model also known as the 'within' model) using the `plm` function from the `plm` package in R analyse the relationship between `HeptatitisRate` and WASH indicators.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- plm(HepatitisRate ~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = HepatitisRate ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-0.0677318 -0.0066636  0.0013683  0.0085389  0.0338086 \n\nCoefficients:\n                                                                                                    Estimate\nPeople.practicing.open.defecation....of.population.                                               8.5691e-03\nPeople.using.at.least.basic.drinking.water.services....of.population.                             2.3667e-02\nPeople.using.at.least.basic.sanitation.services....of.population.                                -1.1585e-02\nPopulation.density..people.per.sq..km.of.land.area.                                              -3.7942e-04\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  8.6247e-05\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -1.0463e-03\nPeople.using.safely.managed.drinking.water.services....of.population.                            -3.6054e-03\nPeople.using.safely.managed.sanitation.services....of.population.                                -5.7112e-04\n                                                                                                  Std. Error\nPeople.practicing.open.defecation....of.population.                                               3.8073e-03\nPeople.using.at.least.basic.drinking.water.services....of.population.                             3.5594e-03\nPeople.using.at.least.basic.sanitation.services....of.population.                                 3.2124e-03\nPopulation.density..people.per.sq..km.of.land.area.                                               1.8435e-04\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  4.0009e-05\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    1.2134e-04\nPeople.using.safely.managed.drinking.water.services....of.population.                             3.5111e-03\nPeople.using.safely.managed.sanitation.services....of.population.                                 4.3297e-03\n                                                                                                 t-value\nPeople.practicing.open.defecation....of.population.                                               2.2507\nPeople.using.at.least.basic.drinking.water.services....of.population.                             6.6490\nPeople.using.at.least.basic.sanitation.services....of.population.                                -3.6063\nPopulation.density..people.per.sq..km.of.land.area.                                              -2.0581\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  2.1557\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -8.6230\nPeople.using.safely.managed.drinking.water.services....of.population.                            -1.0269\nPeople.using.safely.managed.sanitation.services....of.population.                                -0.1319\n                                                                                                  Pr(>|t|)\nPeople.practicing.open.defecation....of.population.                                              0.0262575\nPeople.using.at.least.basic.drinking.water.services....of.population.                            9.653e-10\nPeople.using.at.least.basic.sanitation.services....of.population.                                0.0004564\nPopulation.density..people.per.sq..km.of.land.area.                                              0.0417807\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. 0.0331398\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   3.505e-14\nPeople.using.safely.managed.drinking.water.services....of.population.                            0.3065854\nPeople.using.safely.managed.sanitation.services....of.population.                                0.8952825\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              *  \nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                ***\nPopulation.density..people.per.sq..km.of.land.area.                                              *  \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. *  \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ***\nPeople.using.safely.managed.drinking.water.services....of.population.                               \nPeople.using.safely.managed.sanitation.services....of.population.                                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    0.475\nResidual Sum of Squares: 0.026284\nR-Squared:      0.94467\nAdj. R-Squared: 0.93857\nF-statistic: 251.814 on 8 and 118 DF, p-value: < 2.22e-16\n```\n\n\n:::\n:::\n\n\n\nThe below code chunk fits a Fixed Effects Model also known as the 'within' model) using the `plm` function from the `plm` package in R analyse the relationship between `unsafetyRisk` and WASH indicators.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- plm(UnsafeRisk ~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = UnsafeRisk ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n     Min.   1st Qu.    Median   3rd Qu.      Max. \n-1.683001 -0.073009  0.020810  0.128213  0.580755 \n\nCoefficients:\n                                                                                                    Estimate\nPeople.practicing.open.defecation....of.population.                                               0.72708968\nPeople.using.at.least.basic.drinking.water.services....of.population.                             0.43477443\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.21651056\nPopulation.density..people.per.sq..km.of.land.area.                                               0.00037018\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.00063762\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -0.01913748\nPeople.using.safely.managed.drinking.water.services....of.population.                            -0.25010937\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.04852111\n                                                                                                  Std. Error\nPeople.practicing.open.defecation....of.population.                                               0.07488698\nPeople.using.at.least.basic.drinking.water.services....of.population.                             0.07001070\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.06318565\nPopulation.density..people.per.sq..km.of.land.area.                                               0.00362608\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.00078695\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.00238667\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.06906044\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.08516212\n                                                                                                 t-value\nPeople.practicing.open.defecation....of.population.                                               9.7092\nPeople.using.at.least.basic.drinking.water.services....of.population.                             6.2101\nPeople.using.at.least.basic.sanitation.services....of.population.                                 3.4266\nPopulation.density..people.per.sq..km.of.land.area.                                               0.1021\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.8102\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -8.0185\nPeople.using.safely.managed.drinking.water.services....of.population.                            -3.6216\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.5697\n                                                                                                  Pr(>|t|)\nPeople.practicing.open.defecation....of.population.                                              < 2.2e-16\nPeople.using.at.least.basic.drinking.water.services....of.population.                            8.182e-09\nPeople.using.at.least.basic.sanitation.services....of.population.                                0.0008420\nPopulation.density..people.per.sq..km.of.land.area.                                              0.9188591\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. 0.4194354\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   8.713e-13\nPeople.using.safely.managed.drinking.water.services....of.population.                            0.0004328\nPeople.using.safely.managed.sanitation.services....of.population.                                0.5699304\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              ***\nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                ***\nPopulation.density..people.per.sq..km.of.land.area.                                                 \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.    \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ***\nPeople.using.safely.managed.drinking.water.services....of.population.                            ***\nPeople.using.safely.managed.sanitation.services....of.population.                                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    157.97\nResidual Sum of Squares: 10.169\nR-Squared:      0.93563\nAdj. R-Squared: 0.92854\nF-statistic: 214.394 on 8 and 118 DF, p-value: < 2.22e-16\n```\n\n\n:::\n:::\n\n\n\nThe below code chunk fits a Fixed Effects Model also known as the 'within' model) using the `plm` function from the `plm` package in R analyse the relationship between `TyphoidRate` and WASH indicators.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- plm(TyphoidRate~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = TyphoidRate ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n       Min.     1st Qu.      Median     3rd Qu.        Max. \n-1.3345e-02 -1.7639e-03  3.2779e-05  1.9438e-03  6.7478e-03 \n\nCoefficients:\n                                                                                                    Estimate\nPeople.practicing.open.defecation....of.population.                                               1.5961e-02\nPeople.using.at.least.basic.drinking.water.services....of.population.                             1.8088e-02\nPeople.using.at.least.basic.sanitation.services....of.population.                                 2.4683e-03\nPopulation.density..people.per.sq..km.of.land.area.                                               9.1629e-05\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  1.1884e-05\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -4.1832e-04\nPeople.using.safely.managed.drinking.water.services....of.population.                            -4.9622e-03\nPeople.using.safely.managed.sanitation.services....of.population.                                -2.0081e-03\n                                                                                                  Std. Error\nPeople.practicing.open.defecation....of.population.                                               8.4282e-04\nPeople.using.at.least.basic.drinking.water.services....of.population.                             7.8794e-04\nPeople.using.at.least.basic.sanitation.services....of.population.                                 7.1113e-04\nPopulation.density..people.per.sq..km.of.land.area.                                               4.0810e-05\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  8.8568e-06\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    2.6861e-05\nPeople.using.safely.managed.drinking.water.services....of.population.                             7.7724e-04\nPeople.using.safely.managed.sanitation.services....of.population.                                 9.5846e-04\n                                                                                                  t-value\nPeople.practicing.open.defecation....of.population.                                               18.9370\nPeople.using.at.least.basic.drinking.water.services....of.population.                             22.9557\nPeople.using.at.least.basic.sanitation.services....of.population.                                  3.4710\nPopulation.density..people.per.sq..km.of.land.area.                                                2.2452\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.   1.3418\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -15.5736\nPeople.using.safely.managed.drinking.water.services....of.population.                             -6.3844\nPeople.using.safely.managed.sanitation.services....of.population.                                 -2.0952\n                                                                                                  Pr(>|t|)\nPeople.practicing.open.defecation....of.population.                                              < 2.2e-16\nPeople.using.at.least.basic.drinking.water.services....of.population.                            < 2.2e-16\nPeople.using.at.least.basic.sanitation.services....of.population.                                0.0007252\nPopulation.density..people.per.sq..km.of.land.area.                                              0.0266147\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. 0.1822283\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   < 2.2e-16\nPeople.using.safely.managed.drinking.water.services....of.population.                             3.53e-09\nPeople.using.safely.managed.sanitation.services....of.population.                                0.0382947\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              ***\nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                ***\nPopulation.density..people.per.sq..km.of.land.area.                                              *  \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.    \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ***\nPeople.using.safely.managed.drinking.water.services....of.population.                            ***\nPeople.using.safely.managed.sanitation.services....of.population.                                *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    0.062059\nResidual Sum of Squares: 0.001288\nR-Squared:      0.97925\nAdj. R-Squared: 0.97696\nF-statistic: 695.932 on 8 and 118 DF, p-value: < 2.22e-16\n```\n\n\n:::\n:::\n\n\n\nBase on the output of four model, People practicing open defecation and People using at least basic drinking water services are significant across all models, consistently showing a negative relationship with health outcomes. `Level of water stress` appears as significant in most models, suggesting that regions facing higher water stress tend to experience worse health outcomes. `People using safely managed drinking water services` has significant positive impacts on `DiarrheaRate` and `UnsafeRisk`, but it is not significant for `HepatitisRate`.\n\nThe models explaining `HepatitisRate` and `UnsafeRisk` have very high R-squared values (above 94%), suggesting that these models explain most of the variance in the respective dependent variables.The `DiarrheaRate` model has a slightly lower R-squared (85.4%), but still a very good fit.\n\nThe results show that sanitation, drinking water access, and open defecation are important factors influencing health outcomes, particularly `DiarrheaRate` and `UnsafeRisk`.Water stress plays a critical role, indicating that regions with high water stress are likely to face more health-related challenges.There is considerable variation in the impact of predictors on different health outcomes, with some predictors (e.g., `People using safely managed drinking water services`) being more influential for some health outcomes than others.\n\n## 4.4 Coefficient list\n\nThe code chunk below create a list of coefficient for four different health outcome, `DiarrheaRate`, `TyphoidRate`, `UnsafeRisk`, and `HepatitisRate` from the fixed effects models.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef_list <- list(\n  DiarrheaRate = c(\n    OpenDefecation = -0.6755407,\n    BasicWater = -1.0144098,\n    BasicSanitation = -0.1706479,\n    WaterProductivity = 0.0029523,\n    WaterStress = 0.0110199,\n    PopulationDensity = 0.0014148,\n    SafelyManagedWater = 0.2855646,\n    SafelyManagedSanitation = -0.1302516\n  ),\n  TyphoidRate = c(\n    OpenDefecation = 0.015961,\n    BasicWater = 0.018088,\n    BasicSanitation = 0.0024683,\n    WaterProductivity = 1.1884e-05,\n    WaterStress = -4.1832e-04,\n    PopulationDensity = 9.1629e-05,\n    SafelyManagedWater = -4.9622e-03,\n    SafelyManagedSanitation = -2.0081e-03\n  ),\n  UnsafeRisk = c(\n    OpenDefecation = 0.72708968,\n    BasicWater = 0.43477443,\n    BasicSanitation = 0.21651056,\n    WaterProductivity = 0.00063762,\n    WaterStress = -0.01913748,\n    PopulationDensity = 0.00037018,\n    SafelyManagedWater = -0.25010937,\n    SafelyManagedSanitation = 0.04852111\n  ),\n  HepatitisRate = c(\n    OpenDefecation = 0.0085691,\n    BasicWater = 0.023667,\n    BasicSanitation = -0.011585,\n    WaterProductivity = 8.6247e-05,\n    WaterStress = -0.0010463,\n    PopulationDensity = -3.7942e-04,\n    SafelyManagedWater = -3.6054e-03,\n    SafelyManagedSanitation = -5.7112e-04\n  )\n)\n```\n:::\n\n\n\n# 5. Time Series Analysis for period 2022 to 2030 for wash indicators\n\n## 5.1 Create `selected_data`\n\nThe below code chunk use `dplyr` package to select all the variables that will be use for analysis in the `pdata`. This is done using the `select()` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_data <- pdata %>%\n  select(Region, Year, TyphoidRate, DiarrheaRate, HepatitisRate, \n         UnsafeRisk, \n         \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\",\n         \"People.practicing.open.defecation....of.population.\",\n         \"People.using.at.least.basic.drinking.water.services....of.population.\",\n         \"People.using.at.least.basic.sanitation.services....of.population.\",\n         \"People.using.safely.managed.drinking.water.services....of.population.\",\n         \"People.using.safely.managed.sanitation.services....of.population.\",\n         \"Population.density..people.per.sq..km.of.land.area.\",\n         \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\")\n```\n:::\n\n\n\n### 5.2 Converting Data type\n\nThe function `class()` and `typeof()` provide different types of information about the Year column in the `selected_data.`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(selected_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"pseries\" \"factor\" \n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(selected_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n:::\n\n\n\nThe below code chunk ensure that if the `Year` column in the `selected_data` is a factor it will be converted into a numeric format.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_data$Year <- as.numeric(as.character(selected_data$Year))\n```\n:::\n\n\n\nThe below code chunk use function `extract_year()` that extracts a 4-digit year from a mixed string and then cleans the `Year` column in your `selected_data` dataset by applying this function. Finally, it converts the `Year` to a Date format representing the first day of the year.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextract_year <- function(x) {\n  year <- str_extract(x, \"\\\\d{4}\")\n  return(as.numeric(year))\n}\n\nselected_data$Year <- extract_year(selected_data$Year)\n\nselected_data$YearDate <- as.Date(paste0(selected_data$Year, \"-01-01\"))\n```\n:::\n\n\n\nThe below code chunk using str() function provides a compact display the structure of the an object, including its type and other relevant details. The `str(selected_data$Year)`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check the type of the 'Year' column\nstr(selected_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n 'pseries' Named num [1:132] 2000 2001 2002 2003 2004 ...\n - attr(*, \"names\")= chr [1:132] \"African Region-2000\" \"African Region-2001\" \"African Region-2002\" \"African Region-2003\" ...\n - attr(*, \"index\")=Classes 'pindex' and 'data.frame':\t132 obs. of  2 variables:\n  ..$ Region: Factor w/ 6 levels \"African Region\",..: 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ Year  : Factor w/ 22 levels \"2000\",\"2001\",..: 1 2 3 4 5 6 7 8 9 10 ...\n```\n\n\n:::\n:::\n\n\n\n### 5.3 Times Series Analysis using ARIMA\n\nThe below code chunk perform ARIMA (Auto-Regression Integrated Moving Average) time series forecasting for WHO regions based on historical data. It generate the WASH indicators and population from 2022 to 2030.\\\nThe code chunk processes data region-by-region, checks the availability of necessary data, fits ARIMA models, and returns the forecasted values for the next several years, which can be used for policy planning, resource allocation, or trend analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narima_forecast <- function(data, forecast_start_year = 2022, forecast_end_year = 2030) {\n\n#define variable name \n  forecast_vars <- c(\n    \"WaterStress\" = \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\",\n    \"OpenDefecation\" = \"People.practicing.open.defecation....of.population.\",\n    \"BasicWaterServices\" = \"People.using.at.least.basic.drinking.water.services....of.population.\",\n    \"BasicSanitationServices\" = \"People.using.at.least.basic.sanitation.services....of.population.\",\n    \"SafeManagedWaterServices\" = \"People.using.safely.managed.drinking.water.services....of.population.\",\n    \"SafeManagedSanitationServices\" = \"People.using.safely.managed.sanitation.services....of.population.\",\n    \"PopulationDensity\" = \"Population.density..people.per.sq..km.of.land.area.\",\n    \"WaterProductivity\" = \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\"\n  )\n  \n  # Print progress header\n  cat(\"========================================\\n\")\n  cat(\"Starting ARIMA forecasting for\", forecast_start_year, \"to\", forecast_end_year, \"\\n\")\n  cat(\"========================================\\n\\n\")\n  \n  # Verify input data\n  cat(\"Verifying input data...\\n\")\n  cat(\"Input data has\", nrow(data), \"rows and\", ncol(data), \"columns\\n\")\n  \n  # Check if required columns exist\n  required_cols <- c(\"Region\", \"Year\")\n  missing_required <- setdiff(required_cols, names(data))\n  if (length(missing_required) > 0) {\n    stop(\"Missing required columns: \", paste(missing_required, collapse = \", \"))\n  }\n  \n  # Check for variable columns\n  available_vars <- intersect(forecast_vars, names(data))\n  if (length(available_vars) == 0) {\n    stop(\"None of the forecast variables found in the data\")\n  }\n  cat(\"Found\", length(available_vars), \"out of\", length(forecast_vars), \"forecast variables\\n\")\n  \n  # Get unique regions\n  regions <- unique(data$Region)\n  cat(\"Found\", length(regions), \"regions:\", paste(regions, collapse = \", \"), \"\\n\\n\")\n  \n  # Create empty data frame for results\n  all_forecasts <- data.frame()\n  \n  # Process each region\n  for (region in regions) {\n    cat(\"Processing region:\", region, \"\\n\")\n    \n    # Filter data for this region\n    region_data <- data %>% filter(Region == region)\n    cat(\"  Region has\", nrow(region_data), \"rows\\n\")\n    \n    # Create an empty data frame for this region's forecasts\n    region_forecasts <- expand.grid(\n      Region = region,\n      Year = forecast_start_year:forecast_end_year,\n      stringsAsFactors = FALSE\n    )\n    # Add DataType column\n    region_forecasts$DataType <- \"Forecast\"\n    \n    # Process each variable\n    for (short_name in names(forecast_vars)) {\n      var_name <- forecast_vars[short_name]\n      cat(\"  Forecasting:\", short_name, \"(\", var_name, \")\\n\")\n      \n      # Check if variable exists in data\n      if (!(var_name %in% names(region_data))) {\n        cat(\"    Variable not found in data, skipping\\n\")\n        region_forecasts[[short_name]] <- NA\n        next\n      }\n      \n      # Get historical data for this variable\n      var_data <- region_data %>% \n        filter(!is.na(!!sym(var_name)), Year < forecast_start_year) %>%\n        arrange(Year)\n      \n      # Check if enough data\n      if (nrow(var_data) < 5) {\n        cat(\"    Insufficient historical data (need at least 5 points), skipping\\n\")\n        region_forecasts[[short_name]] <- NA\n        next\n      }\n      \n      # Create time series\n      cat(\"    Creating time series with\", nrow(var_data), \"points from\", \n          min(var_data$Year), \"to\", max(var_data$Year), \"\\n\")\n      \n      ts_data <- ts(var_data[[var_name]], \n                   start = min(var_data$Year), \n                   end = max(var_data$Year), \n                   frequency = 1)\n      \n      # Fit ARIMA model and forecast\n      tryCatch({\n        cat(\"    Fitting ARIMA model...\\n\")\n        arima_model <- auto.arima(ts_data, seasonal = FALSE, stepwise = TRUE)\n        \n        # Print model information\n        cat(\"    Model:\", arimaorder(arima_model), \"\\n\")\n        \n        # Generate forecast\n        forecast_years <- forecast_end_year - forecast_start_year + 1\n        cat(\"    Generating\", forecast_years, \"year forecast...\\n\")\n        forecast_result <- forecast(arima_model, h = forecast_years)\n        \n        # Add forecast to results\n        region_forecasts[[short_name]] <- as.numeric(forecast_result$mean)\n        \n        # Print forecast summary\n        cat(\"    Forecast summary - First:\", round(forecast_result$mean[1], 4),\n            \"Last:\", round(forecast_result$mean[forecast_years], 4), \"\\n\")\n        \n      }, error = function(e) {\n        cat(\"    Error in forecasting:\", e$message, \"\\n\")\n        region_forecasts[[short_name]] <- NA\n      })\n    }\n    \n    # Add this region's forecasts to the overall results\n    all_forecasts <- bind_rows(all_forecasts, region_forecasts)\n    cat(\"  Completed forecasts for\", region, \"\\n\\n\")\n  }\n  \n  # Print summary\n  cat(\"========================================\\n\")\n  cat(\"ARIMA forecasting complete\\n\")\n  cat(\"Generated forecasts for\", nrow(all_forecasts), \"rows\\n\")\n  cat(\"Forecasted variables:\", paste(names(all_forecasts)[!(names(all_forecasts) %in% c(\"Region\", \"Year\", \"DataType\"))], collapse = \", \"), \"\\n\")\n  cat(\"========================================\\n\\n\")\n  \n  # Return the clean format results with short names\n  return(all_forecasts)\n}\n```\n:::\n\n\n\nThe below code chunk run the `arima_forecast` from above code chunk, generating forecasts for year 2022 to 2030. The resulting forecasted data is then saved to a csv file name `water_sanitation_forecasts.csv` .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n forecast_data <-arima_forecast(selected_data, \n                                         forecast_start_year = 2022, \n                                          forecast_end_year = 2030)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n========================================\nStarting ARIMA forecasting for 2022 to 2030 \n========================================\n\nVerifying input data...\nInput data has 132 rows and 15 columns\nFound 8 out of 8 forecast variables\nFound 6 regions: African Region, Eastern Mediterranean Region, European Region, Region of the Americas, South-East Asia Region, Western Pacific Region \n\nProcessing region: African Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 13.6691 Last: 15.0825 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 16.6458 Last: 12.6728 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 71.0816 Last: 76.0508 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 41.3846 Last: 46.1911 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 26.6579 Last: 29.7478 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 23.602 Last: 26.1116 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 123.6346 Last: 142.6114 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 50.8416 Last: 51.5612 \n  Completed forecasts for African Region \n\nProcessing region: Eastern Mediterranean Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 434.4198 Last: 477.9403 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 3.4662 Last: 0.4362 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 90.1361 Last: 93.579 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 87.4697 Last: 89.1055 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 3 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 75.6946 Last: 76.178 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 63.9669 Last: 61.6175 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 246.9798 Last: 287.6959 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 75.2812 Last: 90.2432 \n  Completed forecasts for Eastern Mediterranean Region \n\nProcessing region: European Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 29.106 Last: 27.9702 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 0.0173 Last: 0.0163 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 98.219 Last: 98.4982 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 97.367 Last: 97.6688 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 91.6315 Last: 91.4817 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 3 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 81.1007 Last: 84.2264 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 510.6295 Last: 487.6131 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 166.4738 Last: 197.3617 \n  Completed forecasts for European Region \n\nProcessing region: Region of the Americas \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 14.7549 Last: 15.361 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 2.0797 Last: 1.1645 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 96.0721 Last: 97.3119 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 88.8033 Last: 93.0552 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 2 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 70.6284 Last: 73.344 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 2 \n    Generating 9 year forecast...\n    Forecast summary - First: 50.1699 Last: 53.2325 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 136.9497 Last: 140.3939 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 39.9161 Last: 39.9161 \n  Completed forecasts for Region of the Americas \n\nProcessing region: South-East Asia Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 34.9278 Last: 34.9278 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 2.9154 Last: -2.8741 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 94.3236 Last: 97.5214 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 84.3762 Last: 96.7598 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 50.2925 Last: 53.7727 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 45.787 Last: 54.3177 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 437.9126 Last: 490.0413 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 0 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 143.4833 Last: 143.4833 \n  Completed forecasts for South-East Asia Region \n\nProcessing region: Western Pacific Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 24.028 Last: 24.3192 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 6.4089 Last: 4.2022 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 90.9617 Last: 93.5111 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 81.5416 Last: 85.5992 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 55.5271 Last: 58.4247 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 65.9229 Last: 66.8086 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 453.8227 Last: 481.3429 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 118.3247 Last: 146.8719 \n  Completed forecasts for Western Pacific Region \n\n========================================\nARIMA forecasting complete\nGenerated forecasts for 54 rows\nForecasted variables: WaterStress, OpenDefecation, BasicWaterServices, BasicSanitationServices, SafeManagedWaterServices, SafeManagedSanitationServices, PopulationDensity, WaterProductivity \n========================================\n```\n\n\n:::\n\n```{.r .cell-code}\n write.csv(forecast_data, \"water_sanitation_forecasts.csv\", row.names = FALSE)\n```\n:::\n\n\n\n# 6. Forecast for health indicator\n\n## 6.1 Apply coefficient to forecast data\n\nThe below code chunk generates predictions for disease rates (Diarrhea, Typhoid, Unsafe Risk, and Hepatitis) based on forecasted changes in key water and sanitation variables (e.g., open defecation, basic water services, population density) for each region. The function first retrieves baseline values from the historical data for 2021, then calculates the forecasted disease rates for each region between 2022 and 2030 by applying coefficients that quantify the impact of changes in the variables. It iterates over each region and variable, adjusting the baseline values according to the forecasted changes, and ensures that negative disease values are set to zero. The function returns the updated dataset with forecasted disease rates.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_diseases <- function(forecast_data, selected_data) {\n  var_mapping <- c(\n    \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\" = \"WaterStress\",\n    \"People.practicing.open.defecation....of.population.\" = \"OpenDefecation\",\n    \"People.using.at.least.basic.drinking.water.services....of.population.\" = \"BasicWaterServices\",\n    \"People.using.at.least.basic.sanitation.services....of.population.\" = \"BasicSanitationServices\",\n    \"People.using.safely.managed.drinking.water.services....of.population.\" = \"SafeManagedWaterServices\",\n    \"People.using.safely.managed.sanitation.services....of.population.\" = \"SafeManagedSanitationServices\",\n    \"Population.density..people.per.sq..km.of.land.area.\" = \"PopulationDensity\",\n    \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\" = \"WaterProductivity\"\n  )\n  \n\n  historical <- as.data.frame(selected_data)\n  \n\n  baseline <- historical[historical$Year == 2021, ]\n  \n\n  coef_list <- list(\n    DiarrheaRate = c(\n      OpenDefecation = -0.6755407,\n      BasicWaterServices = -1.0144098,\n      BasicSanitationServices = -0.1706479,\n      WaterProductivity = 0.0029523,\n      WaterStress = 0.0110199,\n      PopulationDensity = 0.0014148,\n      SafeManagedWaterServices = 0.2855646,\n      SafeManagedSanitationServices = -0.1302516\n    ),\n    TyphoidRate = c(\n      OpenDefecation = 0.015961,\n      BasicWaterServices = 0.018088,\n      BasicSanitationServices = 0.0024683,\n      WaterProductivity = 1.1884e-05,\n      WaterStress = -4.1832e-04,\n      PopulationDensity = 9.1629e-05,\n      SafeManagedWaterServices = -4.9622e-03,\n      SafeManagedSanitationServices = -2.0081e-03\n    ),\n    UnsafeRisk = c(\n      OpenDefecation = 0.72708968,\n      BasicWaterServices = 0.43477443,\n      BasicSanitationServices = 0.21651056,\n      WaterProductivity = 0.00063762,\n      WaterStress = -0.01913748,\n      PopulationDensity = 0.00037018,\n      SafeManagedWaterServices = -0.25010937,\n      SafeManagedSanitationServices = 0.04852111\n    ),\n    HepatitisRate = c(\n      OpenDefecation = 0.0085691,\n      BasicWaterServices = 0.023667,\n      BasicSanitationServices = -0.011585,\n      WaterProductivity = 8.6247e-05,\n      WaterStress = -0.0010463,\n      PopulationDensity = -3.7942e-04,\n      SafeManagedWaterServices = -3.6054e-03,\n      SafeManagedSanitationServices = -5.7112e-04\n    )\n  )\n  \n  \n  result <- forecast_data\n  \n \n  for (disease in names(coef_list)) {\n    result[[disease]] <- NA\n  }\n  \n\n  for (region in unique(result$Region)) {\n\n    region_baseline <- baseline[baseline$Region == region, ]\n    \n    if (nrow(region_baseline) == 0) {\n      next\n    }\n    \n \n    region_rows <- which(result$Region == region)\n    \n   \n    for (disease in names(coef_list)) {\n   \n      baseline_value <- region_baseline[[disease]]\n      \n      for (row in region_rows) {\n      \n        result[row, disease] <- baseline_value\n        \n        for (pred_name in names(coef_list[[disease]])) {\n          \n          forecast_col <- pred_name\n          \n          historical_col <- names(var_mapping)[var_mapping == forecast_col]\n          \n          if (length(historical_col) == 0 || !forecast_col %in% names(result)) {\n            next\n          }\n          \n          baseline_val <- region_baseline[[historical_col]]\n          forecast_val <- result[row, forecast_col]\n          \n          if (is.na(baseline_val) || is.na(forecast_val)) {\n            next\n          }\n          \n          coef_val <- coef_list[[disease]][pred_name]\n          change <- forecast_val - baseline_val\n          effect <- coef_val * change\n          result[row, disease] <- result[row, disease] + effect\n        }\n      }\n    }\n  }\n  \n  # Set all negative disease values to zero\n  for (disease in names(coef_list)) {\n    negative_rows <- which(result[[disease]] < 0)\n    if (length(negative_rows) > 0) {\n      result[negative_rows, disease] <- 0\n    }\n  }\n  \n  return(result)\n}\n```\n:::\n\n\n\nThe code chunk below runs the `predict_diseases` created above, generating the predicted disease rates for each region and year. It then saves the results to a csv file named `disease_predictions.csv`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndisease_forecasts <- predict_diseases(forecast_data, selected_data)\n\n\nwrite.csv(disease_forecasts, \"disease_predictions.csv\", row.names = FALSE)\n```\n:::\n\n\n\n# 7. Merging Historical data with Forcasted data\n\nThe code combines historical and forecasted data by first mapping the original water and sanitation variables from the `selected_data` dataset to standardized names, then cleaning and adding relevant columns for disease rates (e.g., DiarrheaRate, TyphoidRate) and water-related variables (e.g., WaterStress, PopulationDensity). It adds a `DataType` column to distinguish historical from forecast data, merges both datasets, and sorts them by Region and Year. Finally, the combined data is saved as a CSV file, `combined_complete_data.csv`, containing both historical and forecasted values for further analysis or reporting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhistorical_vars <- c(\n  \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\",\n  \"People.practicing.open.defecation....of.population.\",\n  \"People.using.at.least.basic.drinking.water.services....of.population.\",\n  \"People.using.at.least.basic.sanitation.services....of.population.\",\n  \"People.using.safely.managed.drinking.water.services....of.population.\",\n  \"People.using.safely.managed.sanitation.services....of.population.\",\n  \"Population.density..people.per.sq..km.of.land.area.\",\n  \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\"\n)\n\nforecast_vars <- c(\n  \"WaterStress\",\n  \"OpenDefecation\",\n  \"BasicWaterServices\",\n  \"BasicSanitationServices\",\n  \"SafeManagedWaterServices\", \n  \"SafeManagedSanitationServices\",\n  \"PopulationDensity\",\n  \"WaterProductivity\"\n)\n\n\nvar_mapping <- setNames(forecast_vars, historical_vars)\n\n\nhistorical_data <- as.data.frame(selected_data)\n\nhistorical_data$DataType <- \"Historical\"\n\n\nhistorical_clean <- historical_data[, c(\"Region\", \"Year\", \"TyphoidRate\", \"DiarrheaRate\", \n                                       \"HepatitisRate\", \"UnsafeRisk\", \"DataType\")]\n\n\nfor (hist_var in names(var_mapping)) {\n  if (hist_var %in% names(historical_data)) {\n    forecast_var <- var_mapping[hist_var]\n    historical_clean[[forecast_var]] <- historical_data[[hist_var]]\n  }\n}\n\n\ncombined_data <- rbind(historical_clean, disease_forecasts)\n\n\ncombined_data <- combined_data[order(combined_data$Region, combined_data$Year), ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(combined_data, \"combined_complete_data.csv\", row.names = FALSE)\n```\n:::\n\n\n\n# 8. Visualize test result\n\n## 8.1 Importing the combined data\n\nThe below code chunk use `read.csv()` to read the `combined_complete_data.csv`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data <- read.csv(\"combined_complete_data.csv\")\n```\n:::\n\n\n\n## 8.2 plotting for visualization\n\nThe below code chunk creates a line plot using `ggplot2` to visualise the historical result and forecast result of the `DiarrheaRate.`\\\nThe aim of the graph is to observe the change overtime.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_data, aes(x = Year, y = DiarrheaRate, color = Region, linetype = DataType)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Diarrhea Rate: Historical and Forecast\", y = \"Rate\")\n```\n\n::: {.cell-output-display}\n![](Forcasting_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data_long <- combined_data %>%\n  pivot_longer(cols = c(UnsafeRisk, WaterStress, OpenDefecation, BasicWaterServices, \n                        BasicSanitationServices, SafeManagedWaterServices, \n                        SafeManagedSanitationServices, WaterProductivity),\n               names_to = \"WASH_Variable\", values_to = \"Value\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_data_long, aes(x = Year, y = Value, color = Region, linetype = DataType)) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~WASH_Variable, scales = \"free_y\") +  # Facet by WASH variable\n  labs(title = \"WASH Variables Over Time by Region\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Forcasting_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data <- read.csv(\"combined_complete_data.csv\")\n\n\ncombined_data_long <- combined_data %>%\n  pivot_longer(cols = c(UnsafeRisk, WaterStress, OpenDefecation, BasicWaterServices, \n                        BasicSanitationServices, SafeManagedWaterServices, \n                        SafeManagedSanitationServices, WaterProductivity,\n                        TyphoidRate, DiarrheaRate, HepatitisRate),\n               names_to = \"Variable\", values_to = \"Value\")\n\n\nggplot(combined_data_long, aes(x = Year, y = Value, color = Region, linetype = DataType)) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~Variable, scales = \"free_y\") +  # Facet by variable (WASH + diseases)\n  labs(title = \"WASH and Disease Variables Over Time by Region\", y = \"Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Forcasting_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n\n## 8.3 Interactive plot using plotly\n\n### 8.3.1 Import Data\n\nThe below code chunk use `read_csv()` to read the csv file into R as a data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"combined_complete_data.csv\")\n```\n:::\n\n\n\n### 8.3.2 Visualizing the change over time through interactive plot\n\nThe below code chunk use `plotly` to visualise the change overtime of health indicator `TyphoidRate` of all region.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninteractive_plot <- plot_ly(data, \n                            x = ~Year, \n                            y = ~TyphoidRate, \n                            color = ~Region,   \n                            type = 'scatter', \n                            mode = 'lines+markers',  \n                            hoverinfo = 'text', \n                            text = ~paste('Year: ', Year, '<br>Typhoid Rate: ', round(TyphoidRate, 2))) %>%\n  layout(title = \"Interactive Time Series of Typhoid Rate by Region\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Typhoid Rate\"))\n\n\ninteractive_plot\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-59d5c936e30e44b2992f\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-59d5c936e30e44b2992f\">{\"x\":{\"visdat\":{\"7c98407f1f28\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"7c98407f1f28\",\"attrs\":{\"7c98407f1f28\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"hoverinfo\":\"text\",\"text\":{},\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Interactive Time Series of Typhoid Rate by Region\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Typhoid Rate\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.02,0.02,0.02,0.02,0.02,0.021010486038386299,0.022476105958460699,0.024315083027783901,0.026459170526871401,0.028852419445156902,0.031449367947848902,0.034213227006120298,0.0371142681891427,0.040128464594288697],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br>Typhoid Rate:  0.04\",\"Year:  2001 <br>Typhoid Rate:  0.04\",\"Year:  2002 <br>Typhoid Rate:  0.04\",\"Year:  2003 <br>Typhoid Rate:  0.04\",\"Year:  2004 <br>Typhoid Rate:  0.04\",\"Year:  2005 <br>Typhoid Rate:  0.04\",\"Year:  2006 <br>Typhoid Rate:  0.04\",\"Year:  2007 <br>Typhoid Rate:  0.04\",\"Year:  2008 <br>Typhoid Rate:  0.03\",\"Year:  2009 <br>Typhoid Rate:  0.03\",\"Year:  2010 <br>Typhoid Rate:  0.03\",\"Year:  2011 <br>Typhoid Rate:  0.03\",\"Year:  2012 <br>Typhoid Rate:  0.03\",\"Year:  2013 <br>Typhoid Rate:  0.03\",\"Year:  2014 <br>Typhoid Rate:  0.03\",\"Year:  2015 <br>Typhoid Rate:  0.03\",\"Year:  2016 <br>Typhoid Rate:  0.03\",\"Year:  2017 <br>Typhoid Rate:  0.02\",\"Year:  2018 <br>Typhoid Rate:  0.02\",\"Year:  2019 <br>Typhoid Rate:  0.02\",\"Year:  2020 <br>Typhoid Rate:  0.02\",\"Year:  2021 <br>Typhoid Rate:  0.02\",\"Year:  2022 <br>Typhoid Rate:  0.02\",\"Year:  2023 <br>Typhoid Rate:  0.02\",\"Year:  2024 <br>Typhoid Rate:  0.02\",\"Year:  2025 <br>Typhoid Rate:  0.03\",\"Year:  2026 <br>Typhoid Rate:  0.03\",\"Year:  2027 <br>Typhoid Rate:  0.03\",\"Year:  2028 <br>Typhoid Rate:  0.03\",\"Year:  2029 <br>Typhoid Rate:  0.04\",\"Year:  2030 <br>Typhoid Rate:  0.04\"],\"type\":\"scatter\",\"name\":\"African Region\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"line\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[0.059999999999999998,0.059999999999999998,0.050000000000000003,0.050000000000000003,0.050000000000000003,0.050000000000000003,0.050000000000000003,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.040000000000000001,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.029999999999999999,0.02,0.020386625165075199,0.020530954020047901,0.0208582358364089,0.021411129743926401,0.0221327555766095,0.023018894437897699,0.024031486422026301,0.025154323270655098,0.0263610510239457],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br>Typhoid Rate:  0.06\",\"Year:  2001 <br>Typhoid Rate:  0.06\",\"Year:  2002 <br>Typhoid Rate:  0.05\",\"Year:  2003 <br>Typhoid Rate:  0.05\",\"Year:  2004 <br>Typhoid Rate:  0.05\",\"Year:  2005 <br>Typhoid Rate:  0.05\",\"Year:  2006 <br>Typhoid Rate:  0.05\",\"Year:  2007 <br>Typhoid Rate:  0.04\",\"Year:  2008 <br>Typhoid Rate:  0.04\",\"Year:  2009 <br>Typhoid Rate:  0.04\",\"Year:  2010 <br>Typhoid Rate:  0.04\",\"Year:  2011 <br>Typhoid Rate:  0.04\",\"Year:  2012 <br>Typhoid Rate:  0.04\",\"Year:  2013 <br>Typhoid Rate:  0.04\",\"Year:  2014 <br>Typhoid Rate:  0.03\",\"Year:  2015 <br>Typhoid Rate:  0.03\",\"Year:  2016 <br>Typhoid Rate:  0.03\",\"Year:  2017 <br>Typhoid Rate:  0.03\",\"Year:  2018 <br>Typhoid Rate:  0.03\",\"Year:  2019 <br>Typhoid Rate:  0.03\",\"Year:  2020 <br>Typhoid Rate:  0.03\",\"Year:  2021 <br>Typhoid Rate:  0.02\",\"Year:  2022 <br>Typhoid Rate:  0.02\",\"Year:  2023 <br>Typhoid Rate:  0.02\",\"Year:  2024 <br>Typhoid Rate:  0.02\",\"Year:  2025 <br>Typhoid Rate:  0.02\",\"Year:  2026 <br>Typhoid Rate:  0.02\",\"Year:  2027 <br>Typhoid Rate:  0.02\",\"Year:  2028 <br>Typhoid Rate:  0.02\",\"Year:  2029 <br>Typhoid Rate:  0.03\",\"Year:  2030 <br>Typhoid Rate:  0.03\"],\"type\":\"scatter\",\"name\":\"Eastern Mediterranean Region\",\"marker\":{\"color\":\"rgba(252,141,98,1)\",\"line\":{\"color\":\"rgba(252,141,98,1)\"}},\"textfont\":{\"color\":\"rgba(252,141,98,1)\"},\"error_y\":{\"color\":\"rgba(252,141,98,1)\"},\"error_x\":{\"color\":\"rgba(252,141,98,1)\"},\"line\":{\"color\":\"rgba(252,141,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.5346152131381098e-05,6.6550976705585595e-05,5.6013959773226302e-05,0,0,0,0,0,0],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br>Typhoid Rate:  0\",\"Year:  2001 <br>Typhoid Rate:  0\",\"Year:  2002 <br>Typhoid Rate:  0\",\"Year:  2003 <br>Typhoid Rate:  0\",\"Year:  2004 <br>Typhoid Rate:  0\",\"Year:  2005 <br>Typhoid Rate:  0\",\"Year:  2006 <br>Typhoid Rate:  0\",\"Year:  2007 <br>Typhoid Rate:  0\",\"Year:  2008 <br>Typhoid Rate:  0\",\"Year:  2009 <br>Typhoid Rate:  0\",\"Year:  2010 <br>Typhoid Rate:  0\",\"Year:  2011 <br>Typhoid Rate:  0\",\"Year:  2012 <br>Typhoid Rate:  0\",\"Year:  2013 <br>Typhoid Rate:  0\",\"Year:  2014 <br>Typhoid Rate:  0\",\"Year:  2015 <br>Typhoid Rate:  0\",\"Year:  2016 <br>Typhoid Rate:  0\",\"Year:  2017 <br>Typhoid Rate:  0\",\"Year:  2018 <br>Typhoid Rate:  0\",\"Year:  2019 <br>Typhoid Rate:  0\",\"Year:  2020 <br>Typhoid Rate:  0\",\"Year:  2021 <br>Typhoid Rate:  0\",\"Year:  2022 <br>Typhoid Rate:  0\",\"Year:  2023 <br>Typhoid Rate:  0\",\"Year:  2024 <br>Typhoid Rate:  0\",\"Year:  2025 <br>Typhoid Rate:  0\",\"Year:  2026 <br>Typhoid Rate:  0\",\"Year:  2027 <br>Typhoid Rate:  0\",\"Year:  2028 <br>Typhoid Rate:  0\",\"Year:  2029 <br>Typhoid Rate:  0\",\"Year:  2030 <br>Typhoid Rate:  0\"],\"type\":\"scatter\",\"name\":\"European Region\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"line\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br>Typhoid Rate:  0\",\"Year:  2001 <br>Typhoid Rate:  0\",\"Year:  2002 <br>Typhoid Rate:  0\",\"Year:  2003 <br>Typhoid Rate:  0\",\"Year:  2004 <br>Typhoid Rate:  0\",\"Year:  2005 <br>Typhoid Rate:  0\",\"Year:  2006 <br>Typhoid Rate:  0\",\"Year:  2007 <br>Typhoid Rate:  0\",\"Year:  2008 <br>Typhoid Rate:  0\",\"Year:  2009 <br>Typhoid Rate:  0\",\"Year:  2010 <br>Typhoid Rate:  0\",\"Year:  2011 <br>Typhoid Rate:  0\",\"Year:  2012 <br>Typhoid Rate:  0\",\"Year:  2013 <br>Typhoid Rate:  0\",\"Year:  2014 <br>Typhoid Rate:  0\",\"Year:  2015 <br>Typhoid Rate:  0\",\"Year:  2016 <br>Typhoid Rate:  0\",\"Year:  2017 <br>Typhoid Rate:  0\",\"Year:  2018 <br>Typhoid Rate:  0\",\"Year:  2019 <br>Typhoid Rate:  0\",\"Year:  2020 <br>Typhoid Rate:  0\",\"Year:  2021 <br>Typhoid Rate:  0\",\"Year:  2022 <br>Typhoid Rate:  0\",\"Year:  2023 <br>Typhoid Rate:  0\",\"Year:  2024 <br>Typhoid Rate:  0\",\"Year:  2025 <br>Typhoid Rate:  0\",\"Year:  2026 <br>Typhoid Rate:  0\",\"Year:  2027 <br>Typhoid Rate:  0\",\"Year:  2028 <br>Typhoid Rate:  0\",\"Year:  2029 <br>Typhoid Rate:  0\",\"Year:  2030 <br>Typhoid Rate:  0\"],\"type\":\"scatter\",\"name\":\"Region of the Americas\",\"marker\":{\"color\":\"rgba(231,138,195,1)\",\"line\":{\"color\":\"rgba(231,138,195,1)\"}},\"textfont\":{\"color\":\"rgba(231,138,195,1)\"},\"error_y\":{\"color\":\"rgba(231,138,195,1)\"},\"error_x\":{\"color\":\"rgba(231,138,195,1)\"},\"line\":{\"color\":\"rgba(231,138,195,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[0.22,0.22,0.20999999999999999,0.20000000000000001,0.19,0.17999999999999999,0.17999999999999999,0.17000000000000001,0.16,0.16,0.14999999999999999,0.14000000000000001,0.13,0.12,0.10000000000000001,0.10000000000000001,0.089999999999999997,0.080000000000000002,0.080000000000000002,0.070000000000000007,0.070000000000000007,0.059999999999999998,0.0550318223752971,0.050699554095956501,0.046451397466508497,0.042246802015020402,0.038064766770443702,0.033894415391173799,0.029730115051641502,0.025568948527926402,0.0214094049982755],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br>Typhoid Rate:  0.22\",\"Year:  2001 <br>Typhoid Rate:  0.22\",\"Year:  2002 <br>Typhoid Rate:  0.21\",\"Year:  2003 <br>Typhoid Rate:  0.2\",\"Year:  2004 <br>Typhoid Rate:  0.19\",\"Year:  2005 <br>Typhoid Rate:  0.18\",\"Year:  2006 <br>Typhoid Rate:  0.18\",\"Year:  2007 <br>Typhoid Rate:  0.17\",\"Year:  2008 <br>Typhoid Rate:  0.16\",\"Year:  2009 <br>Typhoid Rate:  0.16\",\"Year:  2010 <br>Typhoid Rate:  0.15\",\"Year:  2011 <br>Typhoid Rate:  0.14\",\"Year:  2012 <br>Typhoid Rate:  0.13\",\"Year:  2013 <br>Typhoid Rate:  0.12\",\"Year:  2014 <br>Typhoid Rate:  0.1\",\"Year:  2015 <br>Typhoid Rate:  0.1\",\"Year:  2016 <br>Typhoid Rate:  0.09\",\"Year:  2017 <br>Typhoid Rate:  0.08\",\"Year:  2018 <br>Typhoid Rate:  0.08\",\"Year:  2019 <br>Typhoid Rate:  0.07\",\"Year:  2020 <br>Typhoid Rate:  0.07\",\"Year:  2021 <br>Typhoid Rate:  0.06\",\"Year:  2022 <br>Typhoid Rate:  0.06\",\"Year:  2023 <br>Typhoid Rate:  0.05\",\"Year:  2024 <br>Typhoid Rate:  0.05\",\"Year:  2025 <br>Typhoid Rate:  0.04\",\"Year:  2026 <br>Typhoid Rate:  0.04\",\"Year:  2027 <br>Typhoid Rate:  0.03\",\"Year:  2028 <br>Typhoid Rate:  0.03\",\"Year:  2029 <br>Typhoid Rate:  0.03\",\"Year:  2030 <br>Typhoid Rate:  0.02\"],\"type\":\"scatter\",\"name\":\"South-East Asia Region\",\"marker\":{\"color\":\"rgba(166,216,84,1)\",\"line\":{\"color\":\"rgba(166,216,84,1)\"}},\"textfont\":{\"color\":\"rgba(166,216,84,1)\"},\"error_y\":{\"color\":\"rgba(166,216,84,1)\"},\"error_x\":{\"color\":\"rgba(166,216,84,1)\"},\"line\":{\"color\":\"rgba(166,216,84,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.0097669068593474895,0.010580209040295101,0.011449319943940399,0.012357258419408899,0.0132952430995033,0.014257813467813799,0.0152410307829611,0.0162417866819984,0.0172575145292857],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br>Typhoid Rate:  0.01\",\"Year:  2001 <br>Typhoid Rate:  0.01\",\"Year:  2002 <br>Typhoid Rate:  0.01\",\"Year:  2003 <br>Typhoid Rate:  0.01\",\"Year:  2004 <br>Typhoid Rate:  0.01\",\"Year:  2005 <br>Typhoid Rate:  0.01\",\"Year:  2006 <br>Typhoid Rate:  0.01\",\"Year:  2007 <br>Typhoid Rate:  0.01\",\"Year:  2008 <br>Typhoid Rate:  0.01\",\"Year:  2009 <br>Typhoid Rate:  0.01\",\"Year:  2010 <br>Typhoid Rate:  0.01\",\"Year:  2011 <br>Typhoid Rate:  0.01\",\"Year:  2012 <br>Typhoid Rate:  0.01\",\"Year:  2013 <br>Typhoid Rate:  0.01\",\"Year:  2014 <br>Typhoid Rate:  0.01\",\"Year:  2015 <br>Typhoid Rate:  0.01\",\"Year:  2016 <br>Typhoid Rate:  0.01\",\"Year:  2017 <br>Typhoid Rate:  0.01\",\"Year:  2018 <br>Typhoid Rate:  0.01\",\"Year:  2019 <br>Typhoid Rate:  0.01\",\"Year:  2020 <br>Typhoid Rate:  0.01\",\"Year:  2021 <br>Typhoid Rate:  0.01\",\"Year:  2022 <br>Typhoid Rate:  0.01\",\"Year:  2023 <br>Typhoid Rate:  0.01\",\"Year:  2024 <br>Typhoid Rate:  0.01\",\"Year:  2025 <br>Typhoid Rate:  0.01\",\"Year:  2026 <br>Typhoid Rate:  0.01\",\"Year:  2027 <br>Typhoid Rate:  0.01\",\"Year:  2028 <br>Typhoid Rate:  0.02\",\"Year:  2029 <br>Typhoid Rate:  0.02\",\"Year:  2030 <br>Typhoid Rate:  0.02\"],\"type\":\"scatter\",\"name\":\"Western Pacific Region\",\"marker\":{\"color\":\"rgba(255,217,47,1)\",\"line\":{\"color\":\"rgba(255,217,47,1)\"}},\"textfont\":{\"color\":\"rgba(255,217,47,1)\"},\"error_y\":{\"color\":\"rgba(255,217,47,1)\"},\"error_x\":{\"color\":\"rgba(255,217,47,1)\"},\"line\":{\"color\":\"rgba(255,217,47,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nThe below code chunk use `plotly` to visualise the change over time of Wash Indicator `waterstress` in all region.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwash_indicator <- \"WaterStress\"\n\ninteractive_plot <- plot_ly(data, \n                            x = ~Year, \n                            y = ~get(wash_indicator),  \n                            color = ~Region,   \n                            type = 'scatter', \n                            mode = 'lines+markers',  \n                            hoverinfo = 'text', \n                            text = ~paste('Year: ', Year, '<br>', wash_indicator, ': ', round(get(wash_indicator), 2))) %>%\n  layout(title = paste(\"Interactive Time Series of\", wash_indicator, \"by Region\"),\n         xaxis = list(title = \"Year\",\n                      rangeslider = list(type = \"date\"),  \n                      type = \"linear\"),  \n         yaxis = list(title = wash_indicator),\n         dragmode = \"pan\")\n\ninteractive_plot\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-ae9eb9743b04055aecfd\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ae9eb9743b04055aecfd\">{\"x\":{\"visdat\":{\"7c98c027ca\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"7c98c027ca\",\"attrs\":{\"7c98c027ca\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"hoverinfo\":\"text\",\"text\":{},\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Interactive Time Series of WaterStress by Region\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Year\",\"rangeslider\":{\"type\":\"date\"},\"type\":\"linear\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"WaterStress\"},\"dragmode\":\"pan\",\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[9.7249961192790693,10.072695124116301,10.4342041774884,10.6377752702326,10.770590627116301,10.900407315651201,11.0060801463953,11.074553885674399,11.325059991976699,11.337547330813999,11.4675968210465,11.5101247349302,11.6138817665814,11.710134353767399,12.0320834771628,12.3628064656512,12.676668333093,12.8696058509535,13.1425029552093,13.320040605697701,13.504773063441901,13.548635983441899,13.669075444493901,13.82396666739,13.9943577271533,14.1717221586704,14.3522239079562,14.534137135523901,14.716685386728701,14.899519334869099,15.0824818179712],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br> WaterStress :  9.72\",\"Year:  2001 <br> WaterStress :  10.07\",\"Year:  2002 <br> WaterStress :  10.43\",\"Year:  2003 <br> WaterStress :  10.64\",\"Year:  2004 <br> WaterStress :  10.77\",\"Year:  2005 <br> WaterStress :  10.9\",\"Year:  2006 <br> WaterStress :  11.01\",\"Year:  2007 <br> WaterStress :  11.07\",\"Year:  2008 <br> WaterStress :  11.33\",\"Year:  2009 <br> WaterStress :  11.34\",\"Year:  2010 <br> WaterStress :  11.47\",\"Year:  2011 <br> WaterStress :  11.51\",\"Year:  2012 <br> WaterStress :  11.61\",\"Year:  2013 <br> WaterStress :  11.71\",\"Year:  2014 <br> WaterStress :  12.03\",\"Year:  2015 <br> WaterStress :  12.36\",\"Year:  2016 <br> WaterStress :  12.68\",\"Year:  2017 <br> WaterStress :  12.87\",\"Year:  2018 <br> WaterStress :  13.14\",\"Year:  2019 <br> WaterStress :  13.32\",\"Year:  2020 <br> WaterStress :  13.5\",\"Year:  2021 <br> WaterStress :  13.55\",\"Year:  2022 <br> WaterStress :  13.67\",\"Year:  2023 <br> WaterStress :  13.82\",\"Year:  2024 <br> WaterStress :  13.99\",\"Year:  2025 <br> WaterStress :  14.17\",\"Year:  2026 <br> WaterStress :  14.35\",\"Year:  2027 <br> WaterStress :  14.53\",\"Year:  2028 <br> WaterStress :  14.72\",\"Year:  2029 <br> WaterStress :  14.9\",\"Year:  2030 <br> WaterStress :  15.08\"],\"type\":\"scatter\",\"name\":\"African Region\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"line\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[313.24872813014298,317.843334160143,323.52431830109498,327.69483584347603,344.64885773919002,361.85682491347598,369.53542471442898,374.34900272966701,379.06383514585701,383.48448880823798,388.10109175776199,392.07299570823801,397.69536000918998,402.10869055109498,405.651544748238,410.82459342157102,417.91852618919,431.47636042109502,433.74706415014299,433.30836534061899,431.25374006871402,430.39879168061901,434.41978041510498,439.85984918203201,445.29991794896,450.73998671588703,456.18005548281502,461.62012424974301,467.06019301666998,472.50026178359701,477.940330550525],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br> WaterStress :  313.25\",\"Year:  2001 <br> WaterStress :  317.84\",\"Year:  2002 <br> WaterStress :  323.52\",\"Year:  2003 <br> WaterStress :  327.69\",\"Year:  2004 <br> WaterStress :  344.65\",\"Year:  2005 <br> WaterStress :  361.86\",\"Year:  2006 <br> WaterStress :  369.54\",\"Year:  2007 <br> WaterStress :  374.35\",\"Year:  2008 <br> WaterStress :  379.06\",\"Year:  2009 <br> WaterStress :  383.48\",\"Year:  2010 <br> WaterStress :  388.1\",\"Year:  2011 <br> WaterStress :  392.07\",\"Year:  2012 <br> WaterStress :  397.7\",\"Year:  2013 <br> WaterStress :  402.11\",\"Year:  2014 <br> WaterStress :  405.65\",\"Year:  2015 <br> WaterStress :  410.82\",\"Year:  2016 <br> WaterStress :  417.92\",\"Year:  2017 <br> WaterStress :  431.48\",\"Year:  2018 <br> WaterStress :  433.75\",\"Year:  2019 <br> WaterStress :  433.31\",\"Year:  2020 <br> WaterStress :  431.25\",\"Year:  2021 <br> WaterStress :  430.4\",\"Year:  2022 <br> WaterStress :  434.42\",\"Year:  2023 <br> WaterStress :  439.86\",\"Year:  2024 <br> WaterStress :  445.3\",\"Year:  2025 <br> WaterStress :  450.74\",\"Year:  2026 <br> WaterStress :  456.18\",\"Year:  2027 <br> WaterStress :  461.62\",\"Year:  2028 <br> WaterStress :  467.06\",\"Year:  2029 <br> WaterStress :  472.5\",\"Year:  2030 <br> WaterStress :  477.94\"],\"type\":\"scatter\",\"name\":\"Eastern Mediterranean Region\",\"marker\":{\"color\":\"rgba(252,141,98,1)\",\"line\":{\"color\":\"rgba(252,141,98,1)\"}},\"textfont\":{\"color\":\"rgba(252,141,98,1)\"},\"error_y\":{\"color\":\"rgba(252,141,98,1)\"},\"error_x\":{\"color\":\"rgba(252,141,98,1)\"},\"line\":{\"color\":\"rgba(252,141,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[32.229368902913002,31.4799084785217,31.336383581478302,31.7618630885435,31.4939924305435,31.583777839217401,31.101776937434799,30.525529074021701,30.831959880826101,30.185517348717401,30.177064768413,30.004931765739101,29.9842098797609,29.439700045326099,29.256267721239102,29.194323134326101,29.084614308587,29.754129567847801,29.779059950847799,29.363458791891301,29.1645244350652,29.247930980456498,29.105957746053502,28.963984511650601,28.822011277247601,28.6800380428446,28.5380648084417,28.396091574038699,28.254118339635699,28.112145105232798,27.970171870829802],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br> WaterStress :  32.23\",\"Year:  2001 <br> WaterStress :  31.48\",\"Year:  2002 <br> WaterStress :  31.34\",\"Year:  2003 <br> WaterStress :  31.76\",\"Year:  2004 <br> WaterStress :  31.49\",\"Year:  2005 <br> WaterStress :  31.58\",\"Year:  2006 <br> WaterStress :  31.1\",\"Year:  2007 <br> WaterStress :  30.53\",\"Year:  2008 <br> WaterStress :  30.83\",\"Year:  2009 <br> WaterStress :  30.19\",\"Year:  2010 <br> WaterStress :  30.18\",\"Year:  2011 <br> WaterStress :  30\",\"Year:  2012 <br> WaterStress :  29.98\",\"Year:  2013 <br> WaterStress :  29.44\",\"Year:  2014 <br> WaterStress :  29.26\",\"Year:  2015 <br> WaterStress :  29.19\",\"Year:  2016 <br> WaterStress :  29.08\",\"Year:  2017 <br> WaterStress :  29.75\",\"Year:  2018 <br> WaterStress :  29.78\",\"Year:  2019 <br> WaterStress :  29.36\",\"Year:  2020 <br> WaterStress :  29.16\",\"Year:  2021 <br> WaterStress :  29.25\",\"Year:  2022 <br> WaterStress :  29.11\",\"Year:  2023 <br> WaterStress :  28.96\",\"Year:  2024 <br> WaterStress :  28.82\",\"Year:  2025 <br> WaterStress :  28.68\",\"Year:  2026 <br> WaterStress :  28.54\",\"Year:  2027 <br> WaterStress :  28.4\",\"Year:  2028 <br> WaterStress :  28.25\",\"Year:  2029 <br> WaterStress :  28.11\",\"Year:  2030 <br> WaterStress :  27.97\"],\"type\":\"scatter\",\"name\":\"European Region\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"line\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[13.0880109911111,13.2760507239259,13.493518762111099,13.6932752554444,13.874946684963,13.4965280146296,13.6157410315185,13.716820910999999,13.914907002481501,13.9984292306667,14.1163309485556,14.1588945326667,14.2413965757037,14.266075098185199,14.3128637609259,14.069831280555601,14.275480712666701,14.284231884407401,14.641158272814801,14.648919072074101,14.6182450812222,14.679093849888901,14.7548597003077,14.8306255507265,14.906391401145299,14.9821572515641,15.057923101982899,15.1336889524017,15.209454802820501,15.2852206532392,15.360986503657999],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br> WaterStress :  13.09\",\"Year:  2001 <br> WaterStress :  13.28\",\"Year:  2002 <br> WaterStress :  13.49\",\"Year:  2003 <br> WaterStress :  13.69\",\"Year:  2004 <br> WaterStress :  13.87\",\"Year:  2005 <br> WaterStress :  13.5\",\"Year:  2006 <br> WaterStress :  13.62\",\"Year:  2007 <br> WaterStress :  13.72\",\"Year:  2008 <br> WaterStress :  13.91\",\"Year:  2009 <br> WaterStress :  14\",\"Year:  2010 <br> WaterStress :  14.12\",\"Year:  2011 <br> WaterStress :  14.16\",\"Year:  2012 <br> WaterStress :  14.24\",\"Year:  2013 <br> WaterStress :  14.27\",\"Year:  2014 <br> WaterStress :  14.31\",\"Year:  2015 <br> WaterStress :  14.07\",\"Year:  2016 <br> WaterStress :  14.28\",\"Year:  2017 <br> WaterStress :  14.28\",\"Year:  2018 <br> WaterStress :  14.64\",\"Year:  2019 <br> WaterStress :  14.65\",\"Year:  2020 <br> WaterStress :  14.62\",\"Year:  2021 <br> WaterStress :  14.68\",\"Year:  2022 <br> WaterStress :  14.75\",\"Year:  2023 <br> WaterStress :  14.83\",\"Year:  2024 <br> WaterStress :  14.91\",\"Year:  2025 <br> WaterStress :  14.98\",\"Year:  2026 <br> WaterStress :  15.06\",\"Year:  2027 <br> WaterStress :  15.13\",\"Year:  2028 <br> WaterStress :  15.21\",\"Year:  2029 <br> WaterStress :  15.29\",\"Year:  2030 <br> WaterStress :  15.36\"],\"type\":\"scatter\",\"name\":\"Region of the Americas\",\"marker\":{\"color\":\"rgba(231,138,195,1)\",\"line\":{\"color\":\"rgba(231,138,195,1)\"}},\"textfont\":{\"color\":\"rgba(231,138,195,1)\"},\"error_y\":{\"color\":\"rgba(231,138,195,1)\"},\"error_x\":{\"color\":\"rgba(231,138,195,1)\"},\"line\":{\"color\":\"rgba(231,138,195,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[32.611372979714297,32.879948974571398,33.1961440167143,33.512339058714304,33.1625164378571,33.052853322714299,33.294217887000002,33.562793335571399,33.776947015571402,33.084071216142902,32.391195417142903,34.276545986999999,34.406794514142902,34.537043042714302,34.667291569857099,34.797540098428598,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402,34.927788625571402],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br> WaterStress :  32.61\",\"Year:  2001 <br> WaterStress :  32.88\",\"Year:  2002 <br> WaterStress :  33.2\",\"Year:  2003 <br> WaterStress :  33.51\",\"Year:  2004 <br> WaterStress :  33.16\",\"Year:  2005 <br> WaterStress :  33.05\",\"Year:  2006 <br> WaterStress :  33.29\",\"Year:  2007 <br> WaterStress :  33.56\",\"Year:  2008 <br> WaterStress :  33.78\",\"Year:  2009 <br> WaterStress :  33.08\",\"Year:  2010 <br> WaterStress :  32.39\",\"Year:  2011 <br> WaterStress :  34.28\",\"Year:  2012 <br> WaterStress :  34.41\",\"Year:  2013 <br> WaterStress :  34.54\",\"Year:  2014 <br> WaterStress :  34.67\",\"Year:  2015 <br> WaterStress :  34.8\",\"Year:  2016 <br> WaterStress :  34.93\",\"Year:  2017 <br> WaterStress :  34.93\",\"Year:  2018 <br> WaterStress :  34.93\",\"Year:  2019 <br> WaterStress :  34.93\",\"Year:  2020 <br> WaterStress :  34.93\",\"Year:  2021 <br> WaterStress :  34.93\",\"Year:  2022 <br> WaterStress :  34.93\",\"Year:  2023 <br> WaterStress :  34.93\",\"Year:  2024 <br> WaterStress :  34.93\",\"Year:  2025 <br> WaterStress :  34.93\",\"Year:  2026 <br> WaterStress :  34.93\",\"Year:  2027 <br> WaterStress :  34.93\",\"Year:  2028 <br> WaterStress :  34.93\",\"Year:  2029 <br> WaterStress :  34.93\",\"Year:  2030 <br> WaterStress :  34.93\"],\"type\":\"scatter\",\"name\":\"South-East Asia Region\",\"marker\":{\"color\":\"rgba(166,216,84,1)\",\"line\":{\"color\":\"rgba(166,216,84,1)\"}},\"textfont\":{\"color\":\"rgba(166,216,84,1)\"},\"error_y\":{\"color\":\"rgba(166,216,84,1)\"},\"error_x\":{\"color\":\"rgba(166,216,84,1)\"},\"line\":{\"color\":\"rgba(166,216,84,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030],\"y\":[42.848067229000002,44.173009724166697,45.117575586999997,46.33641809225,47.558490427666698,48.472045793749999,45.938320342416702,43.2967006075,40.7314649941667,38.025514632583302,35.3156384045,32.737667591083301,30.609544306749999,28.503647499749999,26.490282667833299,24.158272087083301,24.337270454666701,24.183367956416699,24.011874622083301,24.047077885083301,23.858175801833301,23.95099177825,24.028013772834701,24.091929360202698,24.144968785247698,24.1889827844137,24.2255071645505,24.255816392742801,24.280968067053902,24.3018398199285,24.319159941947799],\"mode\":\"lines+markers\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"Year:  2000 <br> WaterStress :  42.85\",\"Year:  2001 <br> WaterStress :  44.17\",\"Year:  2002 <br> WaterStress :  45.12\",\"Year:  2003 <br> WaterStress :  46.34\",\"Year:  2004 <br> WaterStress :  47.56\",\"Year:  2005 <br> WaterStress :  48.47\",\"Year:  2006 <br> WaterStress :  45.94\",\"Year:  2007 <br> WaterStress :  43.3\",\"Year:  2008 <br> WaterStress :  40.73\",\"Year:  2009 <br> WaterStress :  38.03\",\"Year:  2010 <br> WaterStress :  35.32\",\"Year:  2011 <br> WaterStress :  32.74\",\"Year:  2012 <br> WaterStress :  30.61\",\"Year:  2013 <br> WaterStress :  28.5\",\"Year:  2014 <br> WaterStress :  26.49\",\"Year:  2015 <br> WaterStress :  24.16\",\"Year:  2016 <br> WaterStress :  24.34\",\"Year:  2017 <br> WaterStress :  24.18\",\"Year:  2018 <br> WaterStress :  24.01\",\"Year:  2019 <br> WaterStress :  24.05\",\"Year:  2020 <br> WaterStress :  23.86\",\"Year:  2021 <br> WaterStress :  23.95\",\"Year:  2022 <br> WaterStress :  24.03\",\"Year:  2023 <br> WaterStress :  24.09\",\"Year:  2024 <br> WaterStress :  24.14\",\"Year:  2025 <br> WaterStress :  24.19\",\"Year:  2026 <br> WaterStress :  24.23\",\"Year:  2027 <br> WaterStress :  24.26\",\"Year:  2028 <br> WaterStress :  24.28\",\"Year:  2029 <br> WaterStress :  24.3\",\"Year:  2030 <br> WaterStress :  24.32\"],\"type\":\"scatter\",\"name\":\"Western Pacific Region\",\"marker\":{\"color\":\"rgba(255,217,47,1)\",\"line\":{\"color\":\"rgba(255,217,47,1)\"}},\"textfont\":{\"color\":\"rgba(255,217,47,1)\"},\"error_y\":{\"color\":\"rgba(255,217,47,1)\"},\"error_x\":{\"color\":\"rgba(255,217,47,1)\"},\"line\":{\"color\":\"rgba(255,217,47,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n",
    "supporting": [
      "Forcasting_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}